name: earnin-airline-be-automation-test

on:
  push:
    branches:
      - maser
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  
jobs:
  run-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.7.1
    - name: Cache Docker layers
      uses: actions/cache@v4.1.1
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-cache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-cache-
    - name: Load cached Docker layers
      run: |
        mkdir -p /tmp/.buildx-cache
        if [ -f /tmp/.buildx-cache/docker-cache.tar ]; then
          docker load -i /tmp/.buildx-cache/docker-cache.tar
        else
          echo "No cache found"
        fi      
    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./.docker/compose.yml"
    - name: Save Docker layers
      run: |
        mkdir -p /tmp/.buildx-cache
        docker save $(docker-compose -f ./.docker/compose.yml config | grep 'image:' | awk '{print $2}') -o /tmp/.buildx-cache/docker-cache.tar
    - name: Set up JDK 11
      uses: actions/setup-java@v4.4.0
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'gradle'
    - name: Change gradlew to executable
      run: chmod +x gradlew
    - name: Run Test
      run : ./gradlew clean test
    - name: check downloaded artifact
      run: ls -al build/reports
    - name: Upload Junit Report
      uses: actions/upload-artifact@v4.4.3
      with:
        name: junit-report
        path: build/reports
  publish-report:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: run-test
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.8
      with:
        name: junit-report
        path: .
    - name: check downloaded artifact
      run: ls -al
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3.0.1
      with:
        path: tests/test
        retention-days: 1
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
          

          
